  381_InsertDeleteGetRandomO(1)-DuplicatesAllowed.cpp
d:\dev\projects\gitworkspace\leetcode\array\array\381_insertdeletegetrandomo(1)-duplicatesallowed.cpp(14): warning C4244: “参数”: 从“time_t”转换到“unsigned int”，可能丢失数据
c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(737): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,unsigned __int64>(_Objty *,unsigned __int64 &&)”的引用
          with
          [
              _Ty=int,
              _Objty=int
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,unsigned __int64>(_Objty *,unsigned __int64 &&)”的引用
          with
          [
              _Ty=int,
              _Objty=int
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(996): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,unsigned __int64>(std::allocator<_Ty> &,_Objty *,unsigned __int64 &&)”的引用
          with
          [
              _Alloc=std::allocator<int>,
              _Ty=int,
              _Objty=int
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(995): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,unsigned __int64>(std::allocator<_Ty> &,_Objty *,unsigned __int64 &&)”的引用
          with
          [
              _Alloc=std::allocator<int>,
              _Ty=int,
              _Objty=int
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(930): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,unsigned __int64>(_Ty *,unsigned __int64 &&)”的引用
          with
          [
              _Ty=int
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(929): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,unsigned __int64>(_Ty *,unsigned __int64 &&)”的引用
          with
          [
              _Ty=int
          ]
  d:\dev\projects\gitworkspace\leetcode\array\array\381_insertdeletegetrandomo(1)-duplicatesallowed.cpp(22): note: 参见对正在编译的函数 模板 实例化“void std::vector<int,std::allocator<_Ty>>::emplace_back<unsigned __int64>(unsigned __int64 &&)”的引用
          with
          [
              _Ty=int
          ]
  d:\dev\projects\gitworkspace\leetcode\array\array\381_insertdeletegetrandomo(1)-duplicatesallowed.cpp(22): note: 参见对正在编译的函数 模板 实例化“void std::vector<int,std::allocator<_Ty>>::emplace_back<unsigned __int64>(unsigned __int64 &&)”的引用
          with
          [
              _Ty=int
          ]
c:\program files (x86)\microsoft visual studio 14.0\vc\include\utility(200): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(737): note: 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,unsigned __int64,void,0>(std::pair<int,unsigned __int64> &&) noexcept”的引用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(737): note: 参见对正在编译的函数 模板 实例化“std::pair<int,int>::pair<int,unsigned __int64,void,0>(std::pair<int,unsigned __int64> &&) noexcept”的引用
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,std::pair<int,unsigned __int64>>(_Objty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>,
              _Objty=std::pair<int,int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(857): note: 参见对正在编译的函数 模板 实例化“void std::allocator<_Ty>::construct<_Objty,std::pair<int,unsigned __int64>>(_Objty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>,
              _Objty=std::pair<int,int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(996): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<int,unsigned __int64>>(std::allocator<_Ty> &,_Objty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<int,int>>,
              _Ty=std::pair<int,int>,
              _Objty=std::pair<int,int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0(995): note: 参见对正在编译的函数 模板 实例化“void std::allocator_traits<_Alloc>::construct<_Ty,std::pair<int,unsigned __int64>>(std::allocator<_Ty> &,_Objty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<int,int>>,
              _Ty=std::pair<int,int>,
              _Objty=std::pair<int,int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(930): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,std::pair<int,unsigned __int64>>(_Ty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
  c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector(929): note: 参见对正在编译的函数 模板 实例化“void std::_Wrap_alloc<std::allocator<_Ty>>::construct<_Ty,std::pair<int,unsigned __int64>>(_Ty *,std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
  d:\dev\projects\gitworkspace\leetcode\array\array\381_insertdeletegetrandomo(1)-duplicatesallowed.cpp(23): note: 参见对正在编译的函数 模板 实例化“void std::vector<std::pair<int,int>,std::allocator<_Ty>>::emplace_back<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
  d:\dev\projects\gitworkspace\leetcode\array\array\381_insertdeletegetrandomo(1)-duplicatesallowed.cpp(23): note: 参见对正在编译的函数 模板 实例化“void std::vector<std::pair<int,int>,std::allocator<_Ty>>::emplace_back<std::pair<int,unsigned __int64>>(std::pair<int,unsigned __int64> &&)”的引用
          with
          [
              _Ty=std::pair<int,int>
          ]
  Array.vcxproj -> D:\dev\Projects\GitWorkspace\LeetCode\Array\x64\Debug\Array.exe
  Array.vcxproj -> D:\dev\Projects\GitWorkspace\LeetCode\Array\x64\Debug\Array.pdb (Partial PDB)
